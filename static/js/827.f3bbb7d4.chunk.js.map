{"version":3,"file":"static/js/827.f3bbb7d4.chunk.js","mappings":"kRAYMA,GAASC,EAAAA,EAAAA,IAAO,CACpBC,MAAMC,EAAAA,EAAAA,MAASC,WACfC,OAAOF,EAAAA,EAAAA,MAASE,QAAQD,WACxBE,UAAUH,EAAAA,EAAAA,MAASC,aAGfG,EAAgB,CAAEL,KAAM,GAAIG,MAAO,GAAIC,SAAU,IA6CvD,EA3CqB,WACnB,IAAME,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,KAE1BC,EAAAA,EAAAA,YAAU,WACRH,GACEI,EAAAA,GAAAA,MACE,8DAEL,GAAE,CAACJ,IAMJ,OACE,SAAC,KAAD,CACEH,cAAeA,EACfQ,iBAAkBf,EAClBgB,SARiB,SAAAC,GACnBT,GAASU,EAAAA,EAAAA,IAASD,GACnB,EAGC,UAKE,kBAAME,UAAWC,EAAAA,EAAAA,KAAjB,WACE,mBAAOD,UAAWC,EAAAA,EAAAA,MAAlB,UAA6B,QAE3B,kBAAOD,UAAWC,EAAAA,EAAAA,MAAWC,KAAK,OAAOnB,KAAK,OAAOE,UAAQ,KAC7D,SAAC,KAAD,CAAcF,KAAK,OAAOoB,UAAU,YAEtC,mBAAOH,UAAWC,EAAAA,EAAAA,MAAlB,UAA6B,SAE3B,kBAAOD,UAAWC,EAAAA,EAAAA,MAAWC,KAAK,QAAQnB,KAAK,QAAQE,UAAQ,KAC/D,SAAC,KAAD,CAAcF,KAAK,QAAQoB,UAAU,YAEvC,mBAAOH,UAAWC,EAAAA,EAAAA,MAAlB,UAA6B,YAE3B,kBAAOD,UAAWC,EAAAA,EAAAA,MAAWC,KAAK,WAAWnB,KAAK,WAAWE,UAAQ,KACrE,SAAC,KAAD,CAAcF,KAAK,WAAWoB,UAAU,YAE1C,mBAAQH,UAAWC,EAAAA,EAAAA,OAAYC,KAAK,SAApC,SAA6C,iBAIpD,C,qBC5DD,KAAgB,KAAO,mBAAmB,MAAQ,oBAAoB,MAAQ,oBAAoB,OAAS,qB","sources":["pages/Auth/RegisterForm/RegisterForm.js","webpack://react-homework-template/./src/pages/Auth/index.module.css?9d6f"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectError } from 'redux/auth/auth-selectors';\nimport { register } from 'redux/auth/auth-operations';\n\nimport { Formik, ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\n\nimport { toast } from 'react-toastify';\nimport css from '../index.module.css';\n\nconst schema = object({\n  name: string().required(),\n  email: string().email().required(),\n  password: string().required(),\n});\n\nconst initialValues = { name: '', email: '', password: '' };\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    error &&\n      toast.error(\n        'it seems that such a user already exists, try another email'\n      );\n  }, [error]);\n\n  const onFormSubmit = values => {\n    dispatch(register(values));\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={onFormSubmit}\n    >\n      <form className={css.form}>\n        <label className={css.label}>\n          Name\n          <input className={css.input} type=\"text\" name=\"name\" required />\n          <ErrorMessage name=\"name\" component=\"div\" />\n        </label>\n        <label className={css.label}>\n          Email\n          <input className={css.input} type=\"email\" name=\"email\" required />\n          <ErrorMessage name=\"email\" component=\"div\" />\n        </label>\n        <label className={css.label}>\n          Password\n          <input className={css.input} type=\"password\" name=\"password\" required />\n          <ErrorMessage name=\"password\" component=\"div\" />\n        </label>\n        <button className={css.button} type=\"submit\">Register</button>\n      </form>\n    </Formik>\n  );\n};\n\nexport default RegisterForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Auth_form__EXjyq\",\"input\":\"Auth_input__h63cL\",\"label\":\"Auth_label__1GYNu\",\"button\":\"Auth_button__BTpYZ\"};"],"names":["schema","object","name","string","required","email","password","initialValues","dispatch","useDispatch","error","useSelector","selectError","useEffect","toast","validationSchema","onSubmit","values","register","className","css","type","component"],"sourceRoot":""}